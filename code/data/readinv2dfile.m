function N=readinv2dfile(fname,iscirc)% READINV2DFILE - Read INV2D data file% N = readinv2dfile(filename)% Format: (# character can be used for comments)% number_of_Electrodes% x_el1 (y_el1) z_el1% ...% x_eln (y_eln) z_eln% number_of_datapoints% A_1 B_1 M_1 N_1 R_1 (Err_1 I_1/A U_n/V IP_1)% ...% A_n B_n M_n N_n R_n (Err_n I_n/A U_n/V IP_n)% (= Electrode numbers, 0=infinity)% number_of_topopoints (optional)% x_t1 z_t2% ...% x_tn z_tnif nargin<2, iscirc=0; endN.elec=[];fid=fopen(fname,'r');if fid<0, error('File not found!'); endzeile='';while length(zeile)==0,  zeile=destrip(fgetl(fid));endne=sscanf(zeile,'%d\n',1);n=0;while n<ne,    zeile=destrip(fgetl(fid));    if length(zeile)>0,      n=n+1;        el=str2num(zeile);      N.elec(n,1:length(el))=el;    endendif size(N.elec,2)==1, N.elec(:,2)=0; endzeile='';while length(zeile)==0,  zeile=destrip(fgetl(fid));endnm=sscanf(zeile,'%d\n',1);zeile=fgetl(fid);zeile(int32(zeile)==9)=' ';if (zeile(1)=='#')&strfind(zeile,'numbers'), zeile=fgetl(fid); endif (zeile(1)=='#')&(strfind(lower(zeile),'a ')), % token string    ia=0;ib=0;im=0;in=0;ir=0;ierr=0;iip=0;ii=0;iu=0;ik=0;irho=0;it=0;    emul=1;imul=1;umul=1;    zeile(1)='';i=0;formstr='';    while ~isempty(zeile),        i=i+1;utok='';        [tok,zeile]=strtok(zeile);        fis=strfind(tok,'/');        if ~isempty(fis), % physical unit found            fis=fis(1);utok=lower(tok(fis+1:end));tok=tok(1:fis-1);         end        if isempty(tok), break; end        fprintf('%s ',tok);        switch lower(tok),            case {'a','c1'}, ia=i;formstr=[formstr '%f'];            case {'b','c2'}, ib=i;formstr=[formstr '%f'];            case {'m','p1'}, im=i;formstr=[formstr '%f'];            case {'n','p2'}, in=i;formstr=[formstr '%f'];            case {'rhoa','ra','rho_a'}, ir=i;formstr=[formstr '%f'];            case {'rho','r','z'}, irho=i;formstr=[formstr '%f'];            case {'err','error'},                 ierr=i;formstr=[formstr '%f'];                if isequal(utok,'%'), emul=0.01; end            case 'ip', iip=i;formstr=[formstr '%f'];            case 'i', ii=i;formstr=[formstr '%f'];                if isequal(utok,'ma'), imul=1e-3; end                if isequal(utok,'ua'), imul=1e-6; end                if isequal(utok,'na'), imul=1e-9; end                if isequal(utok,'ka'), imul=1e+3; end            case {'u','v'}, iu=i;formstr=[formstr '%f'];                if isequal(utok,'mv'), umul=1e-3; end                if isequal(utok,'uv'), umul=1e-6; end                if isequal(utok,'nv'), umul=1e-9; end                if isequal(utok,'kv'), umul=1e+3; end            case 'k', ik=i;formstr=[formstr '%f'];            case 't', it=i;formstr=[formstr '%f'];	    otherwise, formstr=[formstr '%*s'];        end    end%      [ia ib im in ir ierr iip ii iu],formstr    A=mytextscan(fid,formstr,nm,'commentstyle','#');    if ia, N.a=A{ia}; else N.a=zeros(nm,1); end    if ib, N.b=A{ib}; else N.b=zeros(nm,1); end    if im, N.m=A{im}; else N.m=zeros(nm,1); end    if in, N.n=A{in}; else N.n=zeros(nm,1); end    if ir, N.r=A{ir}; end    if irho, N.rho=A{irho}; end    if iip, N.ip=A{iip}; end    if ierr, N.err=A{ierr}*emul; end    if ii, N.i=A{ii}*imul; end    if iu, N.u=A{iu}*umul; end    if ik, N.konf=A{ik};N.k=N.konf; end    if it, N.t=A{it}; endelse    N.a=zeros(nm,1);N.b=N.a;N.m=N.a;N.n=N.a;N.r=N.a;N.err=N.a;    n=0;    while n<nm,        %     zeile=fgetl(fid);        if isequal(zeile,-1), % no data present            message(sprintf('Error: Only %d of %d data present',n,nm));            fi=n+1:nm;nm=n;            N.a(fi)=[];N.b(fi)=[];N.m(fi)=[];N.n(fi)=[];            N.err(fi)=[];N.r(fi)=[];N.k(fi)=[];            break;        end        aa=strfind(zeile,'#');        if ~isempty(aa), zeile=zeile(1:aa(1)-1); end        if length(zeile)>0,            n=n+1;            mess=str2num(zeile);            if length(mess)<5, break; end            N.a(n)=mess(1);N.b(n)=mess(2);N.m(n)=mess(3);N.n(n)=mess(4);            N.r(n)=mess(5);            if length(mess)>5, N.err(n)=mess(6); end            if length(mess)>6, N.i(n)=mess(7); end % in mA            if length(mess)>7, N.u(n)=mess(8); end % in mV        end        if n<nm, zeile=fgetl(fid); end    endendzeile='';while length(zeile)==0,  zeile=destrip(fgetl(fid));endtopo=[];if ischar(zeile),  nt=sscanf(zeile,'%d\n',1); % number of topo points  zeile='';  while length(zeile)==0,    zeile=destrip(fgetl(fid));  end  if nt>0,      for i=1:nt,          aa=sscanf(zeile,'%f %f');          if isnumeric(aa), topo(i,1)=aa(1);topo(i,2)=aa(2); end          zeile=destrip(fgetl(fid));      end  endendfclose(fid);if isfield(N,'i')&&(length(N.i)>0), N.i=N.i(:); endif isfield(N,'u')&&(length(N.u)>0), N.u=N.u(:); endif isfield(N,'err'),  N.err=abs(N.err);%N.err(find(N.err==0))=0.01;  if min(N.err)>0.3, % apparently percentage numbers      N.err=N.err/100;  endendma=max([N.a(:);N.b(:);N.m(:);N.n(:)]);mo=size(N.elec,1);if ma>mo,    uiwait(errordlg(sprintf('Electrodes %d-%d are not specified in data file!\nDeleting accordant data',...        mo+1,ma),'Data file error'));    fi=find((N.a>mo)|(N.b>mo)|(N.m>mo)|(N.n>mo));    N.a(fi)=[];N.b(fi)=[];N.m(fi)=[];N.n(fi)=[];N.r(fi)=[];    if isfield(N,'err'), N.err(fi)=[]; end    if isfield(N,'ip'), N.ip(fi)=[]; end    if isfield(N,'i'), N.i(fi)=[]; end    if isfield(N,'u'), N.u(fi)=[]; endend% Das hier ist alles scheiﬂ gemassel!if iscirc|(size(N.elec,2)<3), % check for z=topo    un1=unique(N.elec(:,1));    un2=unique(N.elec(:,2));    if length(un2)>0.8*length(un1),%         N.topo=N.elec(:,1:2);%         N.elec(:,3)=N.elec(:,2);%         N.elec(:,2)=0;    endelse % 3rd column present, is topo    N.topo=N.elec(:,[1 3]);N.elec(:,3)=[];    dmbm=sqrt(sum(diff(N.topo).^2,2));dmbm=round(dmbm*100)/100;    N.elec(:,1)=N.elec(1,1)+[0;cumsum(dmbm)];endif ~isempty(topo), N.topo=topo; endif (~iscirc)    if (~isfield(N,'k'))||(length(find(N.k==0))>0), N.k=getkonf2d(N); endendif ~isfield(N,'r'), % no apparent resistivities    if ~isfield(N,'rho')&&isfield(N,'u')&&isfield(N,'i'), N.rho=N.u./N.i; end    if isfield(N,'rho')&&isfield(N,'k'), N.r=N.rho.*N.k; endendmessage(sprintf('%s: %d Measurements with %d Electrodes',fname,nm,ne));function zeile=destrip(zeile)% strip string from comments (with # character)aa=strfind(zeile,'#');if ~isempty(aa), zeile=zeile(1:aa(1)-1); end